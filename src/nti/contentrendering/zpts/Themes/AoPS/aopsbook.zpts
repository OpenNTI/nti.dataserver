# -*- mode: html -*-
name: defn bogus importantdef important concept warning game sidebar defns chapterquote chapterauthor exer exerhard 
<div tal:condition="self" tal:attributes="class python: type(self).__name__; id self/id" tal:content='self' />

name: xtra
<div tal:condition="not:self" tal:attributes="class python: type(self).__name__; id self/id" tal:content='self' />

name: picdefns
<div class="picdefns" tal:attributes="id self/id">
<div tal:replace="self/attributes/Picture"></div>
<div tal:replace="self"></div>
</div>

name: boxed
<span class="boxed" tal:attributes="id self/id" tal:content="self"></span>

name: phantom
<span class="phantom hidden" tal:content="self/attributes/tex"></span>

name:Def Defnoindex angle
<span class="def" tal:attributes="id self/id" tal:content='self/attributes/text' ></span>

name: parts
<ol class="parts itemize">
	<li tal:repeat="item self" tal:attributes="class python: type(item).__name__; id self/id; partnum item/alpha">
	  <span tal:condition="item/title" tal:replace="item/title"></span>
	  <span tal:replace="item"></span>
	</li>
</ol>

name: source MOEMS MathCounts AMC
<span class="source" tal:attributes="id self/id" tal:content="python: '(Source: %s)' % self.attributes['source']" />

name: ref
<a tal:attributes="href self/idref/label/url; id self/id" tal:content="self/idref/label/ref | self/idref/id" />

name: probref
<a tal:attributes="href self/idref/label/url; id self/id" tal:content="self/idref/label/attributes/probnum" />

name: challengeprobs
<div class="challenge-problems" tal:attributes="id self/id"><span class="headingtext">Challenge Problems</span></div>
<ol class="challenge-problems itemize challenge-problems-itemize">
	<li tal:attributes="class python: type(item).__name__; id item/id; probnum item/attributes/probnum; data-probnum item/attributes/probnum" tal:repeat="item self">
		<div tal:replace="item"></div>
	</li>
</ol>

name: beginsol solution
<div class="solution" tal:attributes="id self/id" tal:content="python: 'Solution for Problem ' + str(self.attributes['probnum']) + ':'">Solution</div>
<div class="solution-body" tal:content="self" >Solution Body</div>

name: reviewprobs
<div class="review-problems" tal:attributes="id self/id"><span class="headingtext">Review Problems</span></div>
<ol class="review-problems itemize review-problems-itemize">
	<li tal:attributes="class python: type(item).__name__; id item/id; probnum item/attributes/probnum; data-probnum item/attributes/probnum" tal:repeat="item self">
		<div tal:replace="item"></div>
	</li>
</ol>

name: sectionproblems
<div class="section-problems" tal:attributes="id self/id"><span class="headingtext">Section Problems</span></div>
<ol class="section-problems itemize section-problems-itemize">
	<li tal:repeat="item self">
		<div class="section-problem problem" tal:attributes="id item/id; probnum item/attributes/probnum; data-probnum item/attributes/probnum" tal:content="item"></div>
	</li>
</ol>
<div class="end section-problems">End section problems</div>
<div class="section-problems-separator">
        <span class="headingtext">Analysis</span>
</div>

name: hintitem
<span class="hint"><a href="#" onclick="return togglehint(event)">Hint: </a><span class="hint content hidden" tal:attributes="id self/id" tal:content="self" /></span>

# Note that the non-standard probnum attribute is used in CSS to label these problems (div.problem:after)
# TODO: Why can't we handle that in the template?
# TODO: The 'type' non-standard attribute doesn't seem to be used? It should
# really be unified with the class attribute anyway
name: problem picproblem secprob picsecprob picsecprobspec picproblemspec problemspec
<div class="problem" tal:attributes="id self/id; probnum self/attributes/probnum; type python: type(self).__name__" tal:content="self"></div>


# TODO: Convert to Chameleon switch
name: rightpic leftpic
<div tal:condition="python: hasattr(self, 'resource')" tal:attributes="class python: type(self).__name__" tal:content="self/resource"></div>
<div tal:define="style self/style" tal:condition="python: not hasattr(self, 'resource') and not style" tal:attributes="class python: type(self).__name__">
	<img tal:attributes="id self/id; src self/image/url; alt self/source; width self/image/width/px; height self/image/height/px" />
</div>
<div tal:define="style self/style" tal:condition="python: not hasattr(self, 'resource') and style" tal:attributes="class python: type(self).__name__">
	<img tal:attributes="id self/id; src self/image/url; alt self/source; style self/style/inline" />
</div>

#FIXME There are many options to parpic that we are not handling in the templates
#We only account for the presence of 'r' or 'l' in the options argument
name: parpic
#There has to be a better way to do this
<div tal:attributes="id self/id; class python: (('r' in self.attributes['Options'] and 'rightpic') or ('l' in self.attributes['Options'] and 'leftpic') or '') + ' parpic'" tal:content="self/attributes/Picture"></div>

name: fig
<div class="figure" tal:attributes="id self/title/id" tal:content="self"></div>

name: exercises
<div class="exercises" tal:attributes="id self/id; data-ntiid self/ntiid"><span class="headingtext">Exercises</span></div>
<ol class="exercises itemize exercises-itemize">
	<li tal:repeat="item self" tal:attributes="class python: type(item).__name__; id item/id; exnumber item/attributes/exnumber; data-exnumber item/attributes/exnumber">
	    <div class="exercise" tal:content="item"></div>
	</li>
</ol>
<div class="end exercises end-exercises">End exercises</div>

name: nst nnd nrd nth
<span tal:content="self/attributes/text" /><sup tal:content="python: type(self).__name__[1:]"/>

name: Cube BlackCube
<p tal:condition="python: hasattr(self, 'resource')" tal:replace="self/resource"/>
<img align="bottom" tal:define="style self/style" tal:condition="python: not hasattr(self, 'resource') and not style" tal:attributes="id self/id; src self/image/url; alt self/source; width self/image/width/px; height self/image/height/px" />
<img align="bottom" tal:define="style self/style" tal:condition="python: not hasattr(self, 'resource') and style" tal:attributes="id self/id; src self/image/url; alt self/source; style self/style/inline" />

# Override of default minipage renderer.  This is required to compensate for print based fixed sizes in content.
name: minipage
<div class="minipage" tal:attributes="id self/id" tal:content="self">minipage</div>
