# -*- mode: html -*-
# Move the answer portion of the mathcountsproblem template to here.  This
# allows the new quiz design to render with out any changes to the source
# files.  The problem is that the problem graphics were at the
# mathcountsquestion level instead of the mathcounts problem level.  As, a
# result the image was being rendered after the answer block.
#
# This could cause issues if we have to deal with a mathcountsquestion that
# contains multiple mathcountsproblem sections.  With current MathCounts
# handbook numbering scheme this is not an issue.

name: mathcountsquestion
<li tal:attributes="value self/attributes/questionnum; id self/id">
  <div class="question">
    <div class="problems" tal:content="self" /> 
    <div class="answerblock">
	<input class="answerblank" type="number" tal:attributes="id self/attributes/questionnum" />
    </div>
    <div class="result hidden">
    </div>
  </div>
</li>


name: mathcountsproblem
<div class="problem" tal:attributes="id self/id">
	 <a tal:attributes="name self/id"></a>
	 <span tal:content="self"/>
</div>

# We currently must put a hidden result div in the body next to the problem,
# because existing code to show grades depends on this. (Ultimately this should change.)
# It is easier and more reliable to put it in the problem itself than as something on
# the mathcountsresult, because there may not be a mathcountsresult.

# name: mathcountsresult
# <div class="result hidden" tal:content="self"></div>


name: mathcountshint
<a class="helplink"  tal:attributes="href self/attributes/href" tal:content="self/attributes/helptext" />

name: mathcountssolution mathcountsdifficulty mathcountsresult mathcountssolution

# We have two approaches to rendering the problems as items in the form/ol.
# The one is use is to let each child render itself; problems
# wrap themselves in a li. This makes it easy to get the numbering right,
# but leads to many extra empty paragraphs between li elements; we
# address that by ommitting all those tags in our 'par' template below
# An alternative is to not use tal:content on the ol but instead
# repeat the li directly in it, being careful not to assign li to
# plain paragraphs (hence omit-tag). The trick here is to get the problem
# number.
#	<li tal:attributes="value PATH/TO/PROBNUM" tal:repeat="item self" tal:content="item" tal:omit-tag="python:not any([c.__class__.__name__.startswith('mathcounts') for c in item.childNodes])"></li>

name: mathcountsworksheet
<div class="worksheet-title" tal:attributes="id self/id" tal:content="self/title">Title</div>
<form>
<div class="worksheet-problems itemize" tal:content="self"></div>
</form>

#name: par
#<a tal:attributes="name self/id; id self/id" tal:omit-tag=""/>
#<p tal:content="self" tal:attributes="id self/id" tal:omit-tag=""></p>
