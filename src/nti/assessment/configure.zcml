<!-- -*- mode: nxml -*- -->
<configure
	xmlns="http://namespaces.zope.org/zope"
	xmlns:ext="http://nextthought.com/ntp/ext"
	i18n_domain="zope">
	<include package="zope.component" />
	<include package="zope.location" />

	<include package="nti.externalization" />
	<include package="nti.contentfragments" />

	<!-- Response types -->

	<adapter factory=".response.QTextResponse"
			 provides=".interfaces.IQTextResponse"
			 for="basestring"/>

	<adapter factory=".response.QTextResponse"
			 provides=".interfaces.IQTextResponse"
			 for="int"/>
	<adapter factory=".response.QTextResponse"
			 provides=".interfaces.IQTextResponse"
			 for="long"/>
	<adapter factory=".response.QTextResponse"
			 provides=".interfaces.IQTextResponse"
			 for="float"/>

	<adapter factory=".response.QDictResponse"
			 provides=".interfaces.IQDictResponse"
			 for="dict" />

	<!-- Solution types -->
	<!-- TODO: This should really be on the ILatexContentFragment -->
	<adapter factory=".solution.QLatexSymbolicMathSolution"
			 provides=".interfaces.IQLatexSymbolicMathSolution"
			 for="basestring"/>

	<adapter factory="int .solution.QMultipleChoiceSolution"
			 provides=".interfaces.IQMultipleChoiceSolution"
			 for="basestring"/>
	<adapter factory=".solution.QFreeResponseSolution"
			 provides=".interfaces.IQFreeResponseSolution"
			 for="basestring"/>

	<adapter factory=".hint.QTextHint"
			 provides=".interfaces.IQTextHint"
			 for="basestring"/>

	<!-- Dealing with LaTeX -->
	<adapter factory="._latexplastexconverter.factory"
			 for=".interfaces.IQLatexSymbolicMathSolution .interfaces.IQTextResponse"
			 provides=".interfaces.IResponseToSymbolicMathConverter" />

	<adapter factory="._latexplastexdomcompare.Grader"
			 for="* .interfaces.IQLatexSymbolicMathSolution .interfaces.IQTextResponse"
			 provides=".interfaces.IQSymbolicMathGrader" />


	<!-- Generic grading -->
	<adapter factory=".graders.StringEqualityGrader"
			 for="* .interfaces.IQSingleValuedSolution .interfaces.IQTextResponse" />
	<adapter factory=".graders.FloatEqualityGrader"
			 for="* .interfaces.IQNumericMathSolution .interfaces.IQTextResponse" />
	<adapter factory=".graders.MultipleChoiceGrader"
			 for=".interfaces.IQMultipleChoicePart .interfaces.IQSingleValuedSolution .interfaces.IQTextResponse"
			 provides=".interfaces.IQMultipleChoicePartGrader" />

	<adapter factory=".graders.MatchingPartGrader"
			 for=".interfaces.IQMatchingPart .interfaces.IQMatchingSolution .interfaces.IQDictResponse"
			 provides=".interfaces.IQMatchingPartGrader" />


	<!-- Submissions can be adapted to assessments -->
	<adapter factory=".assessed.assess_question_submission"
			 for=".interfaces.IQuestionSubmission"
			 provides=".interfaces.IQAssessedQuestion" />

	<!-- Externalization -->
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQHint" />
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQPart" />
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQSolution" />
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQuestion" />
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQuestionSet" />
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQuestionSubmission" />
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQAssessedPart" />
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQAssessedQuestion" />
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQuestionSetSubmission" />
	<adapter factory=".externalization._AssessmentInternalObjectIO"
			 for=".interfaces.IQAssessedQuestionSet" />

	<!--
		 Make sure and do this after the .externalization package has
		 worked its magic.
	-->
	<include package="nti.externalization" file="meta.zcml" />
	<ext:registerMimeFactories module=".submission" />


</configure>
