<!-- -*- mode: nxml -*- -->
<configure	xmlns="http://namespaces.zope.org/zope"
			xmlns:i18n="http://namespaces.zope.org/i18n"
			xmlns:zcml="http://namespaces.zope.org/zcml"
			i18n_domain="zope">

	<include package="zope.component" file="meta.zcml" />
	<include package="zope.security" file="meta.zcml" />
	<include package="zope.component" />
	<include package="zope.security" />
	<include package="zope.location" />

	<adapter factory=".adapters._audio_to_contained_type" />
	<adapter factory=".adapters._video_to_contained_type" />
	<adapter factory=".adapters._slide_to_contained_type" />
	<adapter factory=".adapters._timeline_to_contained_type" />
	<adapter factory=".adapters._slidedeck_to_contained_type" />
	<adapter factory=".adapters._slidevideo_to_contained_type" />
	<adapter factory=".adapters._related_to_contained_type" />

	<adapter factory=".adapters.audio_indexed_data_adapter"
			 for="..interfaces.IContentUnit"
			 provides=".interfaces.IAudioIndexedDataContainer"/>

	<adapter factory=".adapters.video_indexed_data_adapter"
			 for="..interfaces.IContentUnit"
			 provides=".interfaces.IVideoIndexedDataContainer" />

	<adapter factory=".adapters.related_content_indexed_data_adapter"
			 for="..interfaces.IContentUnit"
			 provides=".interfaces.IRelatedContentIndexedDataContainer" />

	<adapter factory=".adapters.timeline_indexed_data_adapter"
			 for="..interfaces.IContentUnit"
			 provides=".interfaces.ITimelineIndexedDataContainer" />

	<adapter factory=".adapters.slide_deck_indexed_data_adapter"
			 for="..interfaces.IContentUnit"
			 provides=".interfaces.ISlideDeckIndexedDataContainer" />

	<!-- addition -->
	<subscriber handler=".subscribers._update_audio_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectAddedEvent" />

	<subscriber handler=".subscribers._update_video_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectAddedEvent" />

	<subscriber handler=".subscribers._update_related_content_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectAddedEvent" />

	<subscriber handler=".subscribers._update_timeline_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectAddedEvent" />

	<subscriber handler=".subscribers._update_slidedeck_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectAddedEvent" />

	<!-- mutation -->
	<subscriber handler=".subscribers._update_audio_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectModifiedEvent" />

	<subscriber handler=".subscribers._update_video_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectModifiedEvent" />

	<subscriber handler=".subscribers._update_related_content_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectModifiedEvent" />

	<subscriber handler=".subscribers._update_timeline_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectModifiedEvent" />

	<subscriber handler=".subscribers._update_slidedeck_index_when_content_changes"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectModifiedEvent" />

	<!-- removal -->
	<subscriber handler=".subscribers._clear_audio_index_when_content_removed"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectRemovedEvent" />

	<subscriber handler=".subscribers._clear_video_index_when_content_removed"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectRemovedEvent" />

	<subscriber handler=".subscribers._clear_related_index_when_content_removed"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectRemovedEvent" />

	<subscriber handler=".subscribers._clear_timeline_index_when_content_removed"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectRemovedEvent" />

	<subscriber handler=".subscribers._clear_slidedeck_index_when_content_removed"
				for="..interfaces.IContentPackage
					 zope.lifecycleevent.IObjectRemovedEvent" />

</configure>
