<!-- -*- mode: nxml -*- -->
<configure xmlns="http://namespaces.zope.org/zope"
		   xmlns:i18n="http://namespaces.zope.org/i18n"
		   xmlns:zcml="http://namespaces.zope.org/zcml"
		   xmlns:link="http://nextthought.com/ntp/link_providers">

	<include package="zope.component" />
	<include package=".link_providers" file="meta.zcml" />

	<!-- Logon -->
	<subscriber handler=".logon._user_did_logon" />

	<!-- Local users with passwords get a direct logon link -->
	<subscriber factory=".logon._SimpleExistingUserLinkProvider"
				provides=".interfaces.ILogonLinkProvider"/>
	<!--
		Users we've never seen before get a logon link too: Security through
		obscurity and avoiding leaking information. Also, since
		we are not currently offering any other login types in
		production, this is necessary to make the login page work out.
	-->
	<subscriber factory=".logon._SimpleExistingUserLinkProvider"
				provides=".interfaces.ILogonLinkProvider"
				for=".interfaces.IMissingUser pyramid.interfaces.IRequest" />

	<!-- Additional links for logged-in users -->
	<subscriber factory=".link_providers.flag_link_provider.FlagLinkProvider"
				provides=".interfaces.IAuthenticatedUserLinkProvider" />

	<link:userLink named=".feedback_views.REL_SEND_FEEDBACK"
				   view_named=".feedback_views.REL_SEND_FEEDBACK" />
	<link:userLink named=".invitation_views.REL_ACCEPT_INVITATIONS"
				   view_named=".invitation_views.REL_ACCEPT_INVITATIONS" />

	<subscriber factory=".logon.ImpersonationLinkProvider"
				provides=".interfaces.IAuthenticatedUserLinkProvider" />

	<subscriber factory=".logon.DefaultLogonLinkFilter"
				provides=".interfaces.ILogonLinkFilter" />

	<!-- All the other logon types are disabled in production -->
	<configure zcml:condition="have devmode">
		<subscriber factory=".logon._SimpleMissingUserFacebookLinkProvider"
					provides=".interfaces.ILogonLinkProvider" />

		<subscriber factory=".logon._SimpleExistingUserFacebookLinkProvider"
					provides=".interfaces.ILogonLinkProvider" />

		<subscriber factory=".logon._WhitelistedDomainGoogleLoginLinkProvider"
					provides=".interfaces.ILogonLinkProvider" />

		<subscriber factory=".logon._ExistingOpenIdUserLoginLinkProvider"
					provides=".interfaces.ILogonLinkProvider" />

		<subscriber factory=".logon._MissingUserWhitelistedDomainGoogleLoginLinkProvider"
					provides=".interfaces.ILogonLinkProvider" />

		<subscriber factory=".logon._OnlineQueryGoogleLoginLinkProvider"
					provides=".interfaces.ILogonLinkProvider" />

		<subscriber factory=".logon._MissingUserAopsLoginLinkProvider"
					provides=".interfaces.ILogonLinkProvider" />
		<adapter factory=".logon._MissingUserAopsLoginLinkProvider"
				 for="* pyramid.interfaces.IRequest"
				 provides=".interfaces.ILogonUsernameFromIdentityURLProvider"
				 name="openid.aops.com" />
	</configure>

</configure>
