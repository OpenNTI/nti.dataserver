<!-- -*- mode: nxml -*- -->
<configure xmlns="http://namespaces.zope.org/zope">
	<include package="zope.component" />
	<adapter factory=".workspaces.ContainerEnumerationWorkspace" />

	<adapter factory=".workspaces._UserPagesCollection" name='Pages'/>
	<!-- The pages adapter is also the default -->
	<adapter factory=".workspaces._UserPagesCollection" />
	<adapter factory=".workspaces._UserEnrolledClassSectionsCollection"
			 name='EnrolledClassSections'/>

	<adapter factory=".workspaces._ProviderCollection" />
	<adapter factory=".workspaces.HomogeneousTypedContainerCollection"
			 />
	<!--
	As it stands now, returning FriendsLists cannot be cached,
	because they include dynamic presence information
	-->

	<adapter factory=".workspaces.UncacheableHomogeneousTypedContainerCollection"
			 for="nti.dataserver.interfaces.IFriendsListContainer"
			 provides=".interfaces.IContainerCollection" />
	<adapter factory=".pyramid_renderers.uncacheable_factory" />

	<adapter factory=".workspaces.LibraryWorkspace" />
	<adapter factory=".workspaces.LibraryCollection" />
	<adapter factory=".workspaces.WorkspaceExternalizer" />
	<adapter factory=".workspaces.UserService"
			 provides='.interfaces.IService'/>
	<adapter factory=".workspaces.ServiceExternalizer" />

	<adapter factory=".workspaces.CollectionSummaryExternalizer" />
	<adapter factory=".workspaces.CollectionSummaryExternalizer"
			 name="summary"/>
	<adapter factory=".workspaces.ContainerCollectionDetailExternalizer"
			 name="detail"/>
	<adapter factory=".workspaces.LibraryCollectionDetailExternalizer"
			 name="detail" />
	<adapter factory=".workspaces.LibraryCollectionDetailExternalizer" />
	<adapter factory=".workspaces.ContainerCollectionDetailExternalizer" />
	<adapter factory=".workspaces.CollectionContentTypeAware" />

	<adapter factory="._adapters.EnclosureExternalObject" />
	<adapter factory="._adapters.BrokenExternalObject" />
	<adapter factory=".pyramid_renderers.render_enclosure_factory" />

	<!-- Object transformers -->
	<adapter factory=".dataserver_pyramid_views._question_submission_transformer"
			 for="nti.assessment.interfaces.IQuestionSubmission"
			 provides=".interfaces.INewObjectTransformer" />


	<!-- Logon -->
	<subscriber factory=".logon._SimpleExistingUserLinkProvider"
				provides=".interfaces.ILogonLinkProvider"/>
	<subscriber factory=".logon._SimpleMissingUserFacebookLinkProvider"
				provides=".interfaces.ILogonLinkProvider" />
	<subscriber factory=".logon._SimpleExistingUserFacebookLinkProvider"
				provides=".interfaces.ILogonLinkProvider" />
	<subscriber factory=".logon._WhitelistedDomainGoogleLoginLinkProvider"
				provides=".interfaces.ILogonLinkProvider"/>
	<subscriber factory=".logon._ExistingOpenIdUserLoginLinkProvider"
				provides=".interfaces.ILogonLinkProvider"/>
	<subscriber factory=".logon._MissingUserWhitelistedDomainGoogleLoginLinkProvider"
				provides=".interfaces.ILogonLinkProvider"/>
	<subscriber factory=".logon._OnlineQueryGoogleLoginLinkProvider"
				provides=".interfaces.ILogonLinkProvider"/>

	<!-- Individual field updates -->
	<adapter factory="._adapters.SharedWithExternalFieldTraverser" />
	<adapter factory="._adapters.UserExternalFieldTraverser" />

	<!-- Events -->
	<subscriber handler="._socket_event_listeners.session_disconnected_broadcaster" />
	<subscriber handler="._socket_event_listeners.session_connected_broadcaster" />
	<subscriber handler="._socket_event_listeners.user_change_broadcaster" />


	<subscriber factory="._socket_event_listeners._UserPresenceExternalDecoratorFactory"
				for="nti.dataserver.interfaces.IUser"
				provides="nti.externalization.interfaces.IExternalObjectDecorator" />

	<subscriber handler=".logon.add_new_user_to_static_communities" />
	<subscriber handler=".logon._user_did_logon" />

	<subscriber factory=".dataserver_socketio_views._WSWillUpgradeVeto"
				provides="geventwebsocket.interfaces.IWSWillUpgradeVeto"
				for="geventwebsocket.interfaces.IWSWillUpgradeEvent" />

	<include package="nti.dataserver" />
	<include package="nti.contentrange" />
	<include package="nti.contentsearch" />
	<include package="nti.socketio" />
	<include package="nti.assessment" />
</configure>
