<!-- -*- mode: nxml -*- -->
<configure	xmlns="http://namespaces.zope.org/zope"
			xmlns:i18n="http://namespaces.zope.org/i18n"
			xmlns:zcml="http://namespaces.zope.org/zcml">

	<include package="zope.component" file="meta.zcml" />
	<include package="zope.security" file="meta.zcml" />
	<include package="zope.component" />

	<!-- Informative utilities -->
	<!--
	NOTE: These are global.
	If we add sub-libraries, then depending on the visibility policy,
	we would need to re-register a utility in the
	same site (which by default would hide the parent) or
	have them cooperate (in the same way that, e.g.,
	zope.pluggableauth..principalfolder does.
	-->
	<!--
	NOTE: Obviously the packaging is off here. Someone
	started moving things and didn't finish, but it would be hard
	to finish with this layout because the two packages are
	interdependent...which is why they were a single package to start
	with.
	-->
	<utility factory="._videoindex_map.VideoIndexMap"
			 provides="nti.appserver.interfaces.IVideoIndexMap"/>
	<utility factory="._related_content_map.RelatedContentIndexMap"
			 provides="nti.appserver.interfaces.IRelatedContentIndexMap"/>


	<!-- Events -->
	<subscriber	handler="._videoindex_map.add_video_items_from_new_content" />
	<subscriber	handler="._videoindex_map.remove_video_items_from_old_content" />
	<subscriber	handler="._related_content_map.add_related_content_items_from_new_content" />
	<subscriber	handler="._related_content_map.remove_related_content_items_from_old_content" />

	<!-- Other decorators -->
	<subscriber factory=".library_views._ContentUnitPreferencesDecorator"
				provides="nti.externalization.interfaces.IExternalMappingDecorator" />

	<!-- Content card resolution; temporary? -->
	<utility factory=".card_views._ContentCardResolver" name="NTICard" />
	<utility factory=".card_views._ContentCardResolver" name="nticard" />

	<adapter factory=".library_views._ContainerContentUnitPreferencesFactory"
			 for="nti.dataserver.containers.LastModifiedBTreeContainer"
			 provides="nti.appserver.interfaces.IContentUnitPreferences" />

	<adapter factory=".library_views._DelimitedHierarchyContentUnitPreferencesFactory"
			 provides="nti.appserver.interfaces.IContentUnitPreferences" />

	<!-- FIXME: These need to be handled at an interface level, not this class level.
	The intent is to adapt to the UGD containers found in a User, but
	this also catches forum containers -->
	<adapter factory=".library_views._ContainerFieldsTraversable"
			 for="nti.dataserver.containers.LastModifiedBTreeContainer"
			 provides="zope.traversing.interfaces.ITraversable"
			 name="fields" />

	<adapter factory=".library_views._ContainerFieldsTraversable"
			 for="nti.dataserver.containers.LastModifiedBTreeContainer pyramid.interfaces.IRequest"
			 provides="zope.traversing.interfaces.ITraversable"
			 name="fields" />

	<adapter factory=".library_views._ContentUnitFieldsTraversable"
			 for="nti.contentlibrary.interfaces.IContentUnit"
			 provides="zope.traversing.interfaces.ITraversable"
			 name="fields" />

	<adapter factory=".library_views._ContentUnitFieldsTraversable"
			 for="nti.contentlibrary.interfaces.IContentUnit pyramid.interfaces.IRequest"
			 provides="zope.traversing.interfaces.ITraversable"
			 name="fields" />

	<!--
		 Cache ACLs for things from boto directly (previously, we were
		 caching the string value)
	-->
	<class class="nti.contentlibrary.boto_s3.BotoS3ContentUnit">
		<implements interface="nti.dataserver.interfaces.IACLProviderCacheable" />
	</class>
</configure>
