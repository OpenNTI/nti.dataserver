<!-- -*- mode: nxml -*- -->
<configure	xmlns="http://namespaces.zope.org/zope"
			xmlns:i18n="http://namespaces.zope.org/i18n"
			xmlns:z3c="http://namespaces.zope.org/z3c"
			xmlns:apidoc="http://namespaces.zope.org/apidoc"
			xmlns:zcml="http://namespaces.zope.org/zcml">

	<include package="zope.component" file="meta.zcml" />
	<include package="zope.component" />

	<adapter factory=".ContainerEnumerationWorkspace" />

	<!--
	The user workspace builds its collections through a subscriber list.
	-->
	<subscriber factory=".UserPagesCollection"
				provides=".interfaces.ICollection"
				for=".interfaces.IUserWorkspace" />

	<subscriber factory=".DynamicMembershipsContainerCollection"
				provides=".interfaces.ICollection"
				for=".interfaces.IUserWorkspace" />

	<subscriber factory=".DynamicFriendsListContainerCollection"
				provides=".interfaces.ICollection"
				for=".interfaces.IUserWorkspace" />

	<subscriber factory=".CommunitiesContainerCollection"
				provides=".interfaces.ICollection"
				for=".interfaces.IUserWorkspace" />

	<subscriber factory=".AllCommunitiesContainerCollection"
				provides=".interfaces.ICollection"
				for=".interfaces.IUserWorkspace" />

	<adapter factory="._UserDynamicMembershipsCollectionFactory"
			 name="DynamicMemberships"/>

	<adapter factory="._UserDynamicFriendsListCollectionFactory"
			 name="Groups"/>

	<adapter factory="._UserCommunitiesCollectionFactory"
			 name="Communities"/>

	<adapter factory="._UserAllCommunitiesCollectionFactory"
			 name="AllCommunities"/>

	<!-- Catalog workspace
	<subscriber factory=".catalog._catalog_workspace"
                provides=".interfaces.IWorkspace" />

	<subscriber factory=".catalog.PurchasedCatalogCollection"
                provides=".interfaces.ICatalogCollection"
                for=".interfaces.ICatalogWorkspace" />

    <subscriber factory=".catalog.FeaturedCatalogCollection"
                provides=".interfaces.ICatalogCollection"
                for=".interfaces.ICatalogWorkspace" />
	-->
	 
	<!--
	One of them is the default ICollection adapter. See application.py for why this is wrong.
	-->
	<adapter factory="._UserPagesCollectionFactory"
			 for="nti.dataserver.interfaces.IUser" />

	<adapter factory=".HomogeneousTypedContainerCollection" />

	<!--
	As it stands now, returning FriendsLists cannot be cached,
	because they include dynamic presence information
	-->
	<adapter factory=".FriendsListContainerCollection"
			 for="nti.dataserver.interfaces.IFriendsListContainer"
			 provides=".interfaces.IContainerCollection" />

	<adapter factory=".UserService"
			 provides='.interfaces.IUserService'/>

	<adapter factory=".Service"
			 provides='.interfaces.IService'/>

	<class class=".FriendsListContainerCollection">
		<implements interface="nti.app.renderers.interfaces.IUnModifiedInResponse" />
	</class>

	<!--
	The UserService queries to find all the workspaces the user should have.
	-->
	<subscriber factory="._user_workspace"
				provides=".interfaces.IWorkspace" />

	<subscriber factory="._global_workspace"
				provides=".interfaces.IWorkspace" />

	<adapter factory=".CollectionContentTypeAware" />

	<subscriber	factory=".providers._SearchLinksProvider"
				provides=".interfaces.IUserWorkspaceLinkProvider"/>

	<subscriber	factory=".providers._ResolveMeLinkProvider"
				provides=".interfaces.IUserWorkspaceLinkProvider"/>

	<!-- Externalization -->
	<adapter factory=".externalization.ServiceExternalizer" />

	<adapter factory=".externalization.UserServiceExternalizer"
			 for=".interfaces.IUserService" />

	<adapter factory=".externalization._NTIIDEntryExternalizer" />

	<adapter factory=".externalization.CollectionSummaryExternalizer" />

	<adapter factory=".externalization.CollectionSummaryExternalizer"
			 name="summary"/>

	<adapter factory=".externalization.ContainerCollectionDetailExternalizer"
			 name="detail"/>

	<adapter factory=".externalization.ContainerCollectionDetailExternalizer" />

	<adapter factory=".externalization.WorkspaceExternalizer" />

</configure>
