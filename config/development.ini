#####
### Configuration strategy
# Paste sucks at deployment configuration. It has no support for
# composing configuration information (e.g., includes) and no support
# for default values that can be overridden on the command line
# (see https://bitbucket.org/ianb/pastedeploy/issue/7/).
# Therefore we have no alternative but to make stupid COPIES
# of config files for each machine/scenario.
# Way to go, guys.
# For that reason, we'll try to keep all the stuff you'd want to change
# in the DEFAULT section rather than trying to spread it throughout the file
# and easily miss something.
#####

# Application setup:
# For working with Gunicorn, we define only the main app entry
# point. It is pointed to a dummy app, because preloading does not
# work when combined with threads. The actual true application is hosted in
# the 'pipeline:dataserver_gunicorn' which is loaded manually by gunicorn.py
# in worker processes.

[DEFAULT]
show_exceptions_in_wsgi_errors = true
deploy_root = /Library/WebServer/Documents
http_port = 8081
sync_changes = True


[app:dataserver] #nti.appserver.standalone:configure_app
use = egg:nti.dataserver
# Insert filter-with = linesman to enable profiling at /__profiler__
# see http://packages.python.org/linesman/
#filter-with = linesman
nti_create_ds = 1
main_dictionary_path = %(deploy_root)s/wiktionary/dict.db
# The site_zcml setting, if defined, is a path to a ZCML file
# loaded after the standard config is loaded
#site_zcml = /path/to/site.zcml
#deploy_root = %(deploy_root)s
#sync_changes = %(sync_changes)s
devmode = 1
secure_cookies = 0
cookie_secret = devmode cookie secret
#openid.store.type = mem
openid.param_field_name = openid2
openid.success_callback = nti.appserver.logon:_openidcallback
# Google uses a weird mix of namespaces. It only supports these values, plus
# country (http://code.google.com/apis/accounts/docs/OpenID.html#endpoint)
openid.ax_required = email=http://schema.openid.net/contact/email firstname=http://axschema.org/namePerson/first lastname=http://axschema.org/namePerson/last language=http://axschema.org/pref/language
openid.sreg_required = email fullname nickname language
facebook.app.id = 272442356159055
facebook.app.secret = 964997cea8939ffae988668f6c634f0c

#pyramid.reload_templates = true

# The debugtoolbar seems to somehow interfere with the extjs app
# "somehow". It's very hard to tell because all exceptions are buried
# It seems the app gets in a cycle reconnecting websockets and
# fails to download the Library. Or something. But the workers wind
# up unresponsive to additional HTTP requests
#pyramid.includes = pyramid_debugtoolbar

get deploy_root = deploy_root
#deploy_root = content.nextthought.com
get sync_changes = sync_changes

# Spambayes config
spambayes_db_path = %(deploy_root)s/spambayes/trec07p.db
spambayes_ham_cutoff = 0.20
spambayes_spam_cutoff = 0.90
spambayes_use_bigrams = False
spambayes_unknown_word_prob = 0.5
spambayes_arc_discriminators = 50
spambayes_max_discriminators = 150
spambayes_unknown_word_strength = 0.45
spambayes_minimum_prob_strength = 0.10

## pyramid_mailer
mail.host = email-smtp.us-east-1.amazonaws.com
# port 25 is often blocked by ISPs, use one of the alternates, 465 or 587
mail.port = 587
mail.tls = true
mail.username = AKIAIOO43PY4ANWEYP2Q
mail.default_sender = no-reply@nextthought.com
mail.debug = 5
mail.password = PASSWORD
mail.queue_path = /tmp/ds_maildir
pyramid.includes = pyramid_mailer

# AWS cloud search

[filter:linesman]
use = egg:linesman#profiler

# For some reason the gzip filter doesn't work with gunicorn
# TODO: This is probably corrected now
#[filter:gzip]
#use = egg:Paste#gzip

[filter:paste_error]
use = egg:Paste#error_catcher
debug = true
#error_email = alpha-support@nextthought.com
#smtp_server = email-smtp.us-east-1.amazonaws.com
#from_address = automated.emails@nextthought.com
#smtp_username = AKIAIOO43PY4ANWEYP2Q
#smtp_password = PASSWORD
#smtp_use_tls = true
#error_subject_prefix = 'Alpha Error: '


# CORS needs to be outermost so that even 401 errors ond
# exceptions have the chance to get their responses wrapped
[filter:nti_cors]
use = egg:nti.dataserver#cors

[filter:nti_cors_options]
use = egg:nti.dataserver#cors_options

[app:main]
use = egg:nti.dataserver#gunicorn

[pipeline:dataserver_gunicorn]
pipeline =
		 nti_cors
		 nti_cors_options
		 paste_error
		 egg:nti.dataserver#ops_ping
		 dataserver

# The main server is set to work with gunicorn. We could instead use
# egg:nti.dataserver#httpd, if we renamed the dataserver_gunicorn
# pipeline to main
[server:main]
use = egg:gunicorn#main
host =
port = %(http_port)s
worker_class =  nti.appserver.gunicorn.GeventApplicationWorker
workers = 1
accesslog = -
timeout = 3000

# Begin logging configuration

[loggers]
keys = root, dataserver, repoze, plastex, boto

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console

[logger_dataserver]
level = DEBUG
handlers =
qualname = nti

[logger_repoze]
level = WARNING
handlers =
qualname = repoze

[logger_boto]
level = INFO
handlers =
qualname = boto

[logger_plastex]
level = WARNING
handlers =
qualname = plasTeX

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(thread)d][%(threadName)s] %(message)s
class = zope.exceptions.log.Formatter

# End logging configuration
